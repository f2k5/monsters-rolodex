{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAgBeA,MAbf,SAAeC,GACP,OACQ,sBAAKC,UAAY,iBAAjB,UACQ,qBACQC,IAAG,+BAA4BF,EAAMG,QAAQC,GAA1C,aACHC,IAAM,YAEd,mCAAML,EAAMG,QAAQG,KAApB,OACA,kCAAKN,EAAMG,QAAQI,MAAnB,WCKTC,MAZf,SAAmBR,GAGf,OACI,qBAAKC,UAAY,YAAjB,SACCD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,U,MCKlBO,MAZf,YAAkD,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,aAC9B,OACI,8BACI,uBAAOZ,UAAY,SACfa,KAAO,SACPF,YAAeA,EACfG,SAAYF,OCoDbG,G,wDAtDb,aAAgB,IAAD,8BACb,gBAiBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAhBzC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALF,E,gEAWM,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,+BAShC,MAI0BC,KAAKN,MAA/Bb,EAJA,EAIAA,SAAUU,EAJV,EAIUA,YAMZU,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAAIA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAEpG,OACE,sBAAK9B,UAAY,MAAjB,UACE,iCACE,sDAGF,cAAC,EAAD,CACEW,YAAc,iBACdC,aAAgBe,KAAKf,eAGvB,cAAC,EAAD,CAAUJ,SAAYoB,W,GAhDZI,cCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c095e233.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\"\n\nfunction Card (props) {\n        return (\n                <div className = \"card-container\">\n                        <img\n                                src = {`https://robohash.org/${props.monster.id}?set=set2`}\n                                alt = \"monster\"\n                        />\n                        <h1> {props.monster.name} </h1>\n                        <p> {props.monster.email} </p>\n                </div>\n        );\n}\n\nexport default Card;\n","import React from 'react';\nimport \"./card-list.styles.css\";\nimport Card from \"../card/card.component\";\n\nfunction CardList (props) {\n    // console.log(props.children);\n    // console.log(props);\n    return (\n        <div className = \"card-list\">\n        {props.monsters.map(monster =>\n            <Card key = {monster.id} monster = {monster}/>\n        )}\n        </div>\n    );\n}\n\nexport default CardList;\n","import React from \"react\";\nimport \"./search-box.styles.css\"\n\nfunction SearchBox ({placeholder, handleChange}) {\n    return (\n        <div>\n            <input className = \"search\"\n                type = \"search\"\n                placeholder = {placeholder}\n                onChange = {handleChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\nimport './App.css';\n\nclass App extends Component {\n\n  constructor () {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    }\n\n    //console.log(this.state);\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n  }\n\n  //using arrow functions we automatically bind \"this\" to the function we are using\n  handleChange = (event) => {\n    this.setState({searchField: event.target.value});\n  }\n\n  //the render method returns any HTML that we want\n  render () {\n\n    //destructing:\n    //destructing helps pull properties off of objects and set them to constants that we put inside curly braces, aka the curly braces contains those objects:\n    const { monsters, searchField } = this.state;\n\n    //the above is the equivalent of saying:\n    // const searchFeild = this.state.searchFeild;\n    // const monsters = this.state.monsters;\n\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n  \n    return (\n      <div className = \"App\">\n        <header>\n          <h1> Monsters Rolodex </h1>\n        </header>\n\n        <SearchBox \n          placeholder = \"search monster\"\n          handleChange = {this.handleChange}\n        />\n\n        <CardList monsters = {filteredMonsters} />\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}